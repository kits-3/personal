package project.management.controlandmanagement.impl;

import java.util.Scanner;

import project.management.ControlAndManagement;
import project.management.controlandmanagement.IProduct;
import project.management.controlandmanagement.IStatistics;
import project.management.entity.ProductEntity;
import project.management.service.IProductService;
import project.management.service.impl.ProductService;

public class Product implements IProduct {
	IProductService productService = new ProductService();
	Scanner scan = new Scanner(System.in);
	@Override
	public void product() {
		System.out.println("select option:");
		System.out.println("1.add 2.update 3.delete 4.find 5.out to login");
		String option = scan.next();
		productOption(option);

	}

	@Override
	public void productOption(String option) {
		IStatistics statistics = new Statistic();
		ProductEntity productEntity = new ProductEntity();
		ProductEntity productAlreadyInsertEntity = new ProductEntity();
		switch (option) {
		case "1": {
			insert(productEntity, productAlreadyInsertEntity);
			break;
		}
		case "2": {
			update(productEntity);
			break;
		}
		case "3": {
			delete();
			break;
		}
		case "4": {
			statistics.statistics();
			break;
		}
		case "5": {
			new ControlAndManagement();
			break;
		}
		default:
			System.out.println("select wrong!!! please select again");
			productOption(option);
			break;
		}
	}

	@Override
	public void insert(ProductEntity productEntity, ProductEntity productAlreadyInsertEntity) {

		System.out.println("welcome to insert product!!!");
		System.out.println("please input:");
		System.out.println("product name: ");
		String name = scan.next();
		System.out.println("product price:");
		int price = scan.nextInt();
		System.out.println("product total:");
		int total = scan.nextInt();
		System.out.println("id of Store Machine");
		int storeMachineId = scan.nextInt();
		productEntity.setName(name);
		productEntity.setPrice(price);
		productEntity.setTotal(total);
		productEntity.setStoreMachineId(storeMachineId);
		productAlreadyInsertEntity = productService.addProduct(productEntity);

		System.out.println("product name: " + productAlreadyInsertEntity.getName());
		System.out.println("product price:" + productAlreadyInsertEntity.getPrice());
		System.out.println("product total:" + productAlreadyInsertEntity.getTotal());
		System.out.println("id of Store Machine: " + productAlreadyInsertEntity.getStoreMachineId());

	}

	@Override
	public void update(ProductEntity productEntity) {
		System.out.println("welcome to update product!!!");
		System.out.println("please input:");
		System.out.println("product id: ");
		int id = scan.nextInt();
		
		ProductEntity oldProduct = productService.findOneById(id);
		if (oldProduct == null) {
			System.out.println("id is null out to update product");
		}
		System.out.println("product name: " + oldProduct.getName());
		System.out.println("product price:" + oldProduct.getPrice());
		System.out.println("product total:" + oldProduct.getTotal());
		System.out.println("id of Store Machine: " + oldProduct.getStoreMachineId());
		System.out.println("are you sure update this product ??? y or n");
		String choose = scan.next();
		switch (choose) {
		case "y": {
			System.out.println("product name: ");
			String name = scan.next();
			System.out.println("product price:");
			int price = scan.nextInt();
			System.out.println("product total:");
			int total = scan.nextInt();
			System.out.println("id of Store Machine");
			int storeMachineId = scan.nextInt();
			productEntity.setName(name);
			productEntity.setPrice(price);
			productEntity.setTotal(total);
			productEntity.setStoreMachineId(storeMachineId);
			productService.updateProduct(productEntity);
			break;
		}
		case "n": {
			String option = "2";
			productOption(option);
			break;
		}
		default:
			System.out.println("select false ypu return to update");
			update(productEntity);
			break;
		}

	}

	@Override
	public void delete() {
		// TODO Auto-generated method stub

	}

}
