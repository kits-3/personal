package project.management.controlandmanagement.impl;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import org.omg.CORBA.portable.ValueBase;

import project.management.controlandmanagement.IProduct;
import project.management.controlandmanagement.IStatistics;
import project.management.entity.OrderItemEntity;
import project.management.entity.OrderItemProductEntity;
import project.management.entity.ProductEntity;
import project.management.entity.StoreMachineEntity;
import project.management.service.IStatisticsService;
import project.management.service.impl.StatisticsService;

public class Statistic implements IStatistics {
	IStatisticsService statisticsService = new StatisticsService();
	Scanner scan = new Scanner(System.in);
	IProduct product = new Product();

	@Override
	public void statistics() {
		System.out.println("welcome to Find option !!!");
		System.out.println(
				"select option: 4.1 product of a machine , 4.2 finance , 4.3 inventory , 4.4 machine 4.5 out to select option of ADMIN");
		System.out.println(" please input 1 or 2 or 3 or 4 or 5");
		String key = scan.next();
		switch (key) {
		case "1": {
			System.out.println("list product of machine ");
			System.out.println("please input id of machine");
			int id = scan.nextInt();
			findAllProductOfAMachine(id);
			statistics();
			break;
		}
		case "2": {
			finance();
			break;
		}
		case "3": {

			break;
		}
		case "4": {
			System.out.println("list of machine ");
			findAllMachine();
			statistics();
			break;
		}
		case "5": {
			product.product();
			break;
		}
		default:
			break;
		}
	}

	@Override
	public void findAllProductOfAMachine(int id) {
		List<ProductEntity> productEntities = new ArrayList<ProductEntity>();
		productEntities = statisticsService.findByMachine(id);
		for (int i = 0; i < productEntities.size(); i++) {
			System.out.println("------------------------------------");
			System.out.println("product ID: " + productEntities.get(i).getId());
			System.out.print(" product name: " + productEntities.get(i).getName());
			System.out.print(" product price: " + productEntities.get(i).getPrice());
			System.out.println(" product total: " + productEntities.get(i).getTotal());
		}
		System.out.println("------------------------------------");
	}

	@Override
	public void findAllMachine() {
		List<StoreMachineEntity> storeMachineEntities = new ArrayList<>();
		storeMachineEntities = statisticsService.findAllMachine();
		;
		for (int i = 0; i < storeMachineEntities.size(); i++) {
			System.out.println("------------------------------------");
			System.out.println("product ID: " + storeMachineEntities.get(i).getId());
			System.out.print(" product name: " + storeMachineEntities.get(i).getName());
			System.out.print("  || product address: " + storeMachineEntities.get(i).getAddress());
			System.out.println("  || product userid: " + storeMachineEntities.get(i).getUserid());
		}
		System.out.println("------------------------------------");
	}

	@Override
	public void finance() {
		
		System.out.println("welcome to 4.2 finance");
		System.out.println("1.sum of money is sold each machine, ProductTotal was sold of this machine "
				+ "|| bil of a machine ||");
		System.out.println("2.graph: money total is sold of each machine");
		System.out.println("3. out to Find option");
		System.out.println("select 1 or 2");
		String option = scan.next();
		switch (option) {
		case "1": {
			System.out.println("input machineid to select: 1 or 2 or 3 . . .");
			String id = scan.next();
			int max = statisticsService.findAllMachine().size();
			if (Integer.parseInt(id) < max) {
				List<OrderItemEntity> orderItemEntity = new ArrayList<>();
				orderItemEntity = statisticsService.findOrderitemByMachineid(Integer.parseInt(id));

				int moneySum = 0;
				int productTotal = 0;
				for (int i = 0; i < orderItemEntity.size(); i++) {
					moneySum += orderItemEntity.get(i).getMoneytotal();
					List<OrderItemProductEntity> orderItemProductEntities = statisticsService
							.findProductByOrderitem(orderItemEntity.get(i).getId());
					for (OrderItemProductEntity order : orderItemProductEntities) {
						productTotal += order.getCountOrdered();
					}
				}
				System.out.println();
				System.out.println("-----------------option 1----------------------");
				System.out.println();
				System.out.println("sum: " + moneySum + "  ||  " + "bill count: " + orderItemEntity.size()
						+ " ||   ProductTotal: " + productTotal);
				System.out.println();
				System.out.println("-----------------option 1----------------------");
				System.out.println();

				

			} else {
				System.out.println("you input wrong id machine program out to 4.2 finance");
				finance();
			}
			finance();
			break;
		}
		case "2": {
			int sumAll= 0;
			List<StoreMachineEntity> storeMachineEntities= statisticsService.findAllMachine();
			for (int i = 0; i < storeMachineEntities.size(); i++) {			
				List<OrderItemEntity> orderItemEntities = statisticsService.findOrderitemByMachineid(storeMachineEntities.get(i).getId());
				int sum = 0;
				for (OrderItemEntity order : orderItemEntities) {
					sum += order.getMoneytotal();
				}
				storeMachineEntities.get(i).setSum(sum);
				sumAll += storeMachineEntities.get(i).getSum();
			}
			String[][] graph = new String[10][10];
			for (int i = 1; i < graph.length; i++) {
				for (int j = 0; j < graph.length; j++) {
					if (i == 8 || j == 0) {
						graph[i-1][0] = "|";
						graph[8][j] = "__ ";
					} else {
						graph[i][j] = " ";
					}
				}
			}
			int graph_1 = storeMachineEntities.get(0).getSum() * 100 / sumAll / 10;
			graph[0][0] = "^";
			graph[0][2] = Integer.toString(sumAll);
			graph[0][1] = "Sum Money ";
			/* graph[9- graph_1][3] = "*"; */
			System.out.println(" graph_1 "+ graph_1 + " " + storeMachineEntities.get(0).getSum());
			/*----------------- graph------------------------------ */

			for (int i = 0; i < graph.length-1; i++) {
				for (int j = 0; j < graph.length; j++) {
					System.out.print(graph[i][j]);
				}
				System.out.println();
			}
			System.out.println();
			System.out.println("-------------------		--------------------");

			/*----------------- graph------------------------------ */
			statistics();
			break;
		}
		case "3": {

			statistics();
			break;
		}
		default:
			System.out.println("you input wrong program out to 4.2 finance");
			finance();
			break;
		}
	}

}
