package home.repository.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import home.config.ConnectionFactory;
import home.entity.RoleEntity;
import home.entity.UserEntity;
import home.repository.IRoleRepository;

public class RoleRepositoryImpl implements IRoleRepository{

	private Connection connection = null;
	private PreparedStatement stmt = null;
	private ResultSet rs = null;
	
	private Connection getConnection() throws SQLException {
		Connection conn = null;
		conn = ConnectionFactory.getInstance().getConnection();
		return conn;
	}
	
	@Override
	public RoleEntity getRole(int idUser) {
		RoleEntity role = new RoleEntity();
		try {
			String queryString = "SELECT * FROM role WHERE id = (SELECT role_id FROM user WHERE id = ?);";
			connection = getConnection();
			stmt = connection.prepareStatement(queryString);
			stmt.setString(1, userName);
			rs = stmt.executeQuery();
			int index = 0;
			while(rs.next()) {
				user.setId(rs.getInt("id"));
				user.setUsername(rs.getString("username"));
				user.setPassword(rs.getString("password"));
				user.setEmail(rs.getString("email"));
				user.setRole_id(rs.getInt("role_id"));
				user.setLname(rs.getString("lname"));
				user.setFname(rs.getString("fname"));
				user.setBirthday(rs.getString("birthday"));
				user.setCreate_date(rs.getString("create_date"));
				user.setUpdate_date(rs.getString("update_date"));
				user.setDelete_date(rs.getString("delete_date"));
				user.setStatus(rs.getInt("status"));
				user.setDisplay(rs.getInt("display"));
				user.setDescription(rs.getString("description"));
				user.setPhone(rs.getString("phone"));
				index++;
			}
			if (index == 0) {
				user = null;
			}
		} catch (SQLException e) {
			user = null;
			e.printStackTrace();
		}
		finally {
			try {
				if (connection != null) {
					connection.close();
				}
				if (stmt != null) {
					stmt.close();
				}
				if (rs != null) {
					rs.close();
				}
			}
			catch (SQLException e) {
				System.out.println(e);
			}
		}
		return user;
	}

}
