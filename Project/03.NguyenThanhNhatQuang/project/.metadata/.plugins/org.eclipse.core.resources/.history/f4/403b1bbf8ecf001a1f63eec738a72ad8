package home.service.run.impl;

import java.awt.Menu;

import home.entity.UserEntity;
import home.repository.IUserRepository;
import home.repository.impl.UserRepositoryImpl;
import home.service.input.IInput;
import home.service.input.impl.InputImpl;
import home.service.menu.IMenu;
import home.service.menu.impl.MenuImpl;
import home.service.run.IRun;

public class RunImpl implements IRun {
	public void run() {
		UserEntity user;
		boolean status = true;
		int userChoose = 0;
		menuStart: 
		while (status) {
			userChoose = startProcess();
			if (userChoose == 1) {
				userChoose = loginOrGoback();
				if (userChoose == 1) {
					login:
					while(status) {
						user = loginAccount();
						if (user != null) {
							System.out.println("Welcome: " + user.getLname() + " " + user.getFname());
						} else {
							System.out.println("Username or password is incorret. Try again (1: yes/ 2: go back)");
							new MenuImpl().menuChoose();
							if (new InputImpl().userChoose() == 1) {
								continue login;
							} else {
								continue menuStart;
							}
						}
					}
				} else {
					continue menuStart;
				}
			} else if (userChoose == 2) {
				userChoose = registerOrGoback();
				if (userChoose == 1) {
					register:
					while (status) {
						
					}
				} else {
					continue menuStart;
				}
			} else {
				user = null;
				status = false;
			}
		}
	}

	@Override
	public int startProcess() {
		IMenu menu = new MenuImpl();
		IInput input = new InputImpl();

		menu.menuStart();
		menu.menuChoose();

		return input.userChoose();
	}

	@Override
	public UserEntity loginAccount() {
		UserEntity user;
		IUserRepository userRepository = new UserRepositoryImpl();
		String userName = userName();
		String passWord = passWord();
		user = userRepository.setUserLogin(userName, passWord);
		return user;
	}

	@Override
	public String userName() {
		new MenuImpl().menuInputUserName();
		
		IInput input = new InputImpl();
		return input.userName();
	}

	@Override
	public String passWord() {
		new MenuImpl().menuInputPassword();
		
		IInput input = new InputImpl();
		return input.passWord();
	}

	@Override
	public int loginOrGoback() {
		new MenuImpl().menuLoginAccount();
		new MenuImpl().menuChoose();
		IInput input = new InputImpl();
		return input.userChoose();
	}

	@Override
	public int registerOrGoback() {
		new MenuImpl().menuRegisterAccount();
		new MenuImpl().menuChoose();
		IInput input = new InputImpl();
		return input.userChoose();
	}

	@Override
	public String email() {
		new MenuImpl().menuInputEmail();
		
		IInput input = new InputImpl();
		return input.email();
	}

	@Override
	public String lname() {
		new MenuImpl().menuInputLName();
		
		IInput input = new InputImpl();
		return input.lname();
	}

	@Override
	public String fname() {
		new MenuImpl().menuInputFname();
		
		IInput input = new InputImpl();
		return input.fname();
	}

	@Override
	public String phone() {
		new MenuImpl().menuInputPhone();
		
		IInput input = new InputImpl();
		return input.phone();
	}

	@Override
	public boolean isRegisterSuccess() {
		String userName = userName();
		String passWord = passWord();
		String email = email();
		String lname = lname();
		String fname = fname();
		String phone = phone();
		return new UserRepositoryImpl().setUserRegister(userName, passWord, email, lname, fname, phone);
	}
}
