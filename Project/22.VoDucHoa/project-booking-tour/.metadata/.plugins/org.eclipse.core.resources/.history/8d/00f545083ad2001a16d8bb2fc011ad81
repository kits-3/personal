package pj.tour.repository.payment;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import pj.tour.config.ConnectionFactory;
import pj.tour.entity.PaymentTourEntity;
import pj.tour.entity.TourEntity;
import pj.tour.repository.UserRepository;
import pj.tour.repository.UserRepositoryImpl;
import pj.tour.repository.booking.BookingRepositoryImpl;
import pj.tour.repository.booking.BookingTour;

public class PaymentTourImpl implements PaymentTour{

	private Connection connection = null;
	private PreparedStatement stmt = null;
	private ResultSet rs = null;
	Scanner input = new Scanner(System.in);
	
	
	private Connection getConnection() throws SQLException {
		Connection conn = null;
		conn = ConnectionFactory.getInstance().getConnection();
		return conn;
	}
	@Override
	public void payTour(String booking) {
		// TODO Auto-generated method stub
		BookingTour bookingtour = new BookingRepositoryImpl();
		UserRepository userrepository = new UserRepositoryImpl();
		
		PaymentTourEntity pay = new PaymentTourEntity();
		String queryString = "SELECT * FROM tour where tour_id = ?";
		try {
			connection = getConnection();	
			stmt = connection.prepareStatement(queryString);
			stmt.setString(1, booking);
			rs = stmt.executeQuery(); //Select				
			if(rs.next()) {
				List<PaymentTourEntity> listpayment = new ArrayList<PaymentTourEntity>();
				int priceTour = rs.getInt("price_tour");
				System.out.println("pricetour: "+ priceTour);
				listpayment = showListTour(booking);	
				System.out.println(listpayment);
				System.out.println(listpayment.get(0).getMoneyNumber());	
				
				if (listpayment.get(0).getMoneyNumber() != 0) {
					if (listpayment.get(0).getMoneyNumber() >= priceTour ) {
						System.out.println("");
					}
				}
			}
	
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		finally {
			try {
				if (connection != null) {
					connection.close();
				}
				if (stmt != null) {
					stmt.close();
				}
				if (rs != null) {
					rs.close();
				}
			}
			catch (SQLException e) {
				System.out.println(e);
			}
		}
	}
	
	@Override
	public List<PaymentTourEntity> showListTour(String pay_id) {
		// TODO Auto-generated method stub
		
		List<PaymentTourEntity> tourlists = new ArrayList<PaymentTourEntity>();
		String queryString = "SELECT * FROM payment WHERE pay_id = ?";
		
		try {
			connection = getConnection();
			stmt = connection.prepareStatement(queryString);
			stmt.setString(1, pay_id);
			rs = stmt.executeQuery(); //Select	
			
			while(rs.next()) {
				PaymentTourEntity cus = new PaymentTourEntity();	
				cus.setPayId(rs.getString("pay_id"));
				cus.setMoneyNumber(rs.getInt("money_number"));
				cus.setTourID(rs.getString("tour_id"));
				cus.setUserID(rs.getString("user_id"));				
				tourlists.add(cus);
			}
	
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		finally {
			try {
				if (connection != null) {
					connection.close();
				}
				if (stmt != null) {
					stmt.close();
				}
				if (rs != null) {
					rs.close();
				}
			}
			catch (SQLException e) {
				System.out.println(e);
			}
		}
		return tourlists;
	}
	@Override
	public void updateInfo(int count, String id) {
		// TODO Auto-generated method stub
				
		try {
			String queryString = "update payment set money_number = ? where id = ?" ;
			connection = getConnection();
			stmt = connection.prepareStatement(queryString);
			stmt.setInt(1, count);
			stmt.setString(2, id);
			stmt.executeUpdate();
		} catch (SQLException e) {
			// TODO: handle exception
			e.printStackTrace();
		}finally {
			try {
				if (stmt != null) {
					stmt.close();
				}
				if (connection != null) {
					connection.close();
				}
			} catch (SQLException e) {
				e.printStackTrace();
			}catch (Exception e) {
				e.printStackTrace();
			}
		}
	}
	
}
