package pj.tour.repository.payment;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import pj.tour.config.ConnectionFactory;
import pj.tour.entity.PaymentTourEntity;
import pj.tour.entity.TourEntity;
import pj.tour.repository.UserRepository;
import pj.tour.repository.UserRepositoryImpl;
import pj.tour.repository.booking.BookingRepositoryImpl;
import pj.tour.repository.booking.BookingTour;

public class PaymentTourImpl implements PaymentTour{

	private Connection connection = null;
	private PreparedStatement stmt = null;
	private ResultSet rs = null;
	Scanner input = new Scanner(System.in);
	
	
	private Connection getConnection() throws SQLException {
		Connection conn = null;
		conn = ConnectionFactory.getInstance().getConnection();
		return conn;
	}
	@Override
	public void payTour(String booking) {
		// TODO Auto-generated method stub
		BookingTour bookingtour = new BookingRepositoryImpl();
		UserRepository userrepository = new UserRepositoryImpl();
		List<PaymentTourEntity> payment = new ArrayList<PaymentTourEntity>();
		String queryString = "SELECT * FROM tour where tour_id = ?";
		try {
			connection = getConnection();	
			stmt = connection.prepareStatement(queryString);
			stmt.setString(1, booking);
			rs = stmt.executeQuery(); //Select			
			if(rs.next()) {
				PaymentTourEntity pay = new PaymentTourEntity();
				payment = showListTour(booking);
				
				
//				if (pay.getMoneyNumber() >= rs.getString("price_tour") ) {
				
//				}
				
				System.out.println(payment.get(0).getMoneyNumber());
				System.out.println(rs.getString("price_tour"));
			}
	
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		finally {
			try {
				if (connection != null) {
					connection.close();
				}
				if (stmt != null) {
					stmt.close();
				}
				if (rs != null) {
					rs.close();
				}
			}
			catch (SQLException e) {
				System.out.println(e);
			}
		}
	}
	
	@Override
	public List<PaymentTourEntity> showListTour(String tour_id) {
		// TODO Auto-generated method stub
		
		List<TourEntity> tourlists = new ArrayList<TourEntity>();
		String queryString = "SELECT * FROM tour WHERE tour_id = ?";
		
		try {
			connection = getConnection();
			stmt = connection.prepareStatement(queryString);
			stmt.setString(1, tour_id);
			rs = stmt.executeQuery(); //Select	
			
			while(rs.next()) {
				TourEntity cus = new TourEntity();	
				cus.setTour_id(rs.getString("tour_id"));
				cus.setName_tour(rs.getString("name_Tour"));
				cus.setLocation_start(rs.getString("location_start"));
				cus.setTime_start(rs.getString("time_start"));
				cus.setDate_start(rs.getString("date_start"));
				cus.setMem_number(rs.getInt("mem_number"));
				cus.setDay_number(rs.getInt("day_number"));				
				cus.setPrice_tour(rs.getString("price_tour"));
				
				tourlists.add(cus);
			}
	
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		finally {
			try {
				if (connection != null) {
					connection.close();
				}
				if (stmt != null) {
					stmt.close();
				}
				if (rs != null) {
					rs.close();
				}
			}
			catch (SQLException e) {
				System.out.println(e);
			}
		}
		return tourlists;
	}
	
}
